{"ast":null,"code":"var _jsxFileName = \"/Users/cassiemelton/Documents/btc_fall_2025/front_end_frame/week_7/react-task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // consistent shape: {id,text,completed}\n\n  // Load tasks from localStorage (ensure each has an id)\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('tasks')) || [];\n    const withIds = saved.map(t => {\n      var _t$id;\n      return {\n        id: (_t$id = t.id) !== null && _t$id !== void 0 ? _t$id : `${Date.now()}-${Math.random().toString(16).slice(2)}`,\n        text: t.text,\n        completed: !!t.completed\n      };\n    });\n    setTasks(withIds);\n  }, []);\n\n  // Save tasks whenever they change\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = text => {\n    var _crypto, _crypto$randomUUID;\n    const trimmed = text.trim();\n    if (!trimmed) return;\n    const newTask = {\n      id: `${Date.now()}-${((_crypto = crypto) === null || _crypto === void 0 ? void 0 : (_crypto$randomUUID = _crypto.randomUUID) === null || _crypto$randomUUID === void 0 ? void 0 : _crypto$randomUUID.call(_crypto)) || Math.random().toString(16).slice(2)}`,\n      text: trimmed,\n      completed: false\n    };\n    setTasks(prev => [...prev, newTask]);\n  };\n  const toggleTask = id => {\n    setTasks(prev => prev.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const deleteTask = id => {\n    setTasks(prev => prev.filter(t => t.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"weOf0VesAdD4xw+rXOOhYK4d8/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","saved","JSON","parse","localStorage","getItem","withIds","map","t","_t$id","id","Date","now","Math","random","toString","slice","text","completed","setItem","stringify","addTask","_crypto","_crypto$randomUUID","trimmed","trim","newTask","crypto","randomUUID","call","prev","toggleTask","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cassiemelton/Documents/btc_fall_2025/front_end_frame/week_7/react-task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // consistent shape: {id,text,completed}\r\n\r\n  // Load tasks from localStorage (ensure each has an id)\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const withIds = saved.map(t => ({\r\n      id: t.id ?? `${Date.now()}-${Math.random().toString(16).slice(2)}`,\r\n      text: t.text,\r\n      completed: !!t.completed\r\n    }));\r\n    setTasks(withIds);\r\n  }, []);\r\n\r\n  // Save tasks whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (text) => {\r\n    const trimmed = text.trim();\r\n    if (!trimmed) return;\r\n    const newTask = { id: `${Date.now()}-${crypto?.randomUUID?.() || Math.random().toString(16).slice(2)}`, text: trimmed, completed: false };\r\n    setTasks(prev => [...prev, newTask]);\r\n  };\r\n\r\n  const toggleTask = (id) => {\r\n    setTasks(prev =>\r\n      prev.map(t => (t.id === id ? { ...t, completed: !t.completed } : t))\r\n    );\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(prev => prev.filter(t => t.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>üìù Task Manager</h1>\r\n      <TaskForm addTask={addTask} />\r\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}