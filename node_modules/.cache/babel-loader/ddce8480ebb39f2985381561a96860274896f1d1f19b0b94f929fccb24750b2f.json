{"ast":null,"code":"var _jsxFileName = \"/Users/cassiemelton/Documents/btc_fall_2025/front_end_frame/week_7/react-task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\n\n// Task State\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    text: \"Sample Task\",\n    completed: false\n  }]);\n  function Toggle() {\n    const toggleTask = index => {\n      const newTasks = [...tasks];\n      newTasks[index].completed = !newTasks[index].completed;\n      setTasks(newTasks);\n    };\n  }\n\n  // Load tasks from localStorage\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  // Save tasks to localStorage\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = text => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TvxKAT/PjrL7OuW9i6KSmITAuN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","text","completed","Toggle","toggleTask","index","newTasks","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTask","newTask","id","Date","now","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cassiemelton/Documents/btc_fall_2025/front_end_frame/week_7/react-task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\n\r\n  // Task State\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([\r\n    { text: \"Sample Task\", completed: false }\r\n  ]);\r\n\r\n  function Toggle() {\r\n    const toggleTask = (index) => {\r\n      const newTasks = [...tasks];\r\n      newTasks[index].completed = !newTasks[index].completed;\r\n      setTasks(newTasks);\r\n    };\r\n  }\r\n\r\n  // Load tasks from localStorage\r\n  useEffect(() => {\r\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    setTasks(storedTasks);\r\n  }, []);\r\n\r\n  // Save tasks to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (text) => {\r\n    const newTask = { id: Date.now(), text, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const toggleTask = (id) => {\r\n    setTasks(tasks.map(task =>\r\n      task.id === id ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>üìù Task Manager</h1>\r\n      <TaskForm addTask={addTask} />\r\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CACjC;IAAEU,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC1C,CAAC;EAEF,SAASC,MAAMA,CAAA,EAAG;IAChB,MAAMC,UAAU,GAAIC,KAAK,IAAK;MAC5B,MAAMC,QAAQ,GAAG,CAAC,GAAGP,KAAK,CAAC;MAC3BO,QAAQ,CAACD,KAAK,CAAC,CAACH,SAAS,GAAG,CAACI,QAAQ,CAACD,KAAK,CAAC,CAACH,SAAS;MACtDF,QAAQ,CAACM,QAAQ,CAAC;IACpB,CAAC;EACH;;EAEA;EACAd,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnEX,QAAQ,CAACO,WAAW,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACdkB,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACd,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,OAAO,GAAIb,IAAI,IAAK;IACxB,MAAMc,OAAO,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEjB,IAAI;MAAEC,SAAS,EAAE;IAAM,CAAC;IAC1DF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEgB,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMX,UAAU,GAAIY,EAAE,IAAK;IACzBhB,QAAQ,CAACD,KAAK,CAACoB,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGI,IAAI;MAAElB,SAAS,EAAE,CAACkB,IAAI,CAAClB;IAAU,CAAC,GAAGkB,IAC7D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAIL,EAAE,IAAK;IACzBhB,QAAQ,CAACD,KAAK,CAACuB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACEpB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhC,OAAA,CAACH,QAAQ;MAACqB,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BhC,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACK,UAAU,EAAEA,UAAW;MAACiB,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAAC9B,EAAA,CA9CQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}